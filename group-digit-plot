#!/usr/bin/env perl
use strict;
use warnings;

use GD::Graph::Cartesian;

my $group_size = shift || die 'group_size required';
my $modulo     = shift || die 'modulo required';
my $sequence   = shift || die 'sequence required';

my $height = 400;
my $width  = 800;
my $margin = 20;

my $obj = GD::Graph::Cartesian->new(
    height   => $height,
    width    => $width,
    borderx  => $margin,
    bordery  => $margin,
    iconsize => 4,
);

my $group_re = '(' . ('.' x $group_size) . ')';

my $counter = 0;
my ( $last_x, $last_y );
while ( $sequence =~ /$group_re/g )
{
    $counter++;
    my $mod = $1 % $modulo;
    warn "$counter. $1 % $modulo = $mod\n";
    if ( defined $last_x && defined $last_y )
    {
        $obj->addLine( $last_x, $last_y, $counter, $mod )
    }
    ( $last_x, $last_y ) = ( $counter, $mod );
    $obj->addPoint( $counter, $mod );
    $obj->addString( $counter, $mod, $mod );
}

my ( $x0, $x1, $y0, $y1 ) = ( $obj->_minmaxx, $obj->_minmaxy );
$obj->addRectangle( $x0, $y0, $x1, $y1 );

print $obj->draw;

__END__
perl -MMath::BigFloat -E'say Math::BigFloat->bpi(100)'

perl % 3 6 141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068 > group-digit-plot.png

perl % 5 10 23571113171923293137414347535961677173798389971011031071091131271311371391491511571631671731791811911931971992112232272292332392412512572632692712772
8128329330731131331733133734734935335936737337938338939740140941942143143343944344945746146346747948749149950350952152354154755756356957157758759359960160761361761
9631641643647653659661673677683691701709719727733739743751757761769773787797809811821823827829839853857859863877881883887907911919929937941947953967971977983991997
 > group-digit-plot.png
