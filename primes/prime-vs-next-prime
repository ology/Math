#!/usr/bin/env perl
use strict;
use warnings;

use Chart::Plotly;
use Chart::Plotly::Plot;
use Chart::Plotly::Trace::Scatter;
use Chart::Plotly::Image::Orca;
use Math::Big 'primes';

my $mod  = shift || 20;
my $path = shift || '/Users/gene/tmp/primes-vs-next-prime';

my $size = 500;

die "Path $path does not exist" unless -d $path;

for my $max (qw( 10 100 1000 10000 )) {
    for my $modulo ( 2 .. $mod ) {
        my @xs;
        my @ys;
        my $previous;

        for my $p ( primes($max) ) {
            my $y = $p % $modulo;
            warn "$p % $modulo = $y\n";

            if ( $previous ) {
                my $x = $previous % $modulo;
                warn "\t$previous % $modulo = $x\n";

                push @xs, $x->numify();
                push @ys, $y->numify();
            }

            $previous = $p;
        }

        my $title = sprintf 'Primes below %d Modulo %d vs Next Prime Modulo %d',
            $max, $modulo, $modulo;
        my $scatter = Chart::Plotly::Trace::Scatter->new( x => \@xs, y => \@ys );
        my $plot = Chart::Plotly::Plot->new();
        $plot->add_trace($scatter);
        $plot->layout({
            height => $size,
            width  => $size,
            title  => $title,
            xaxis  => { title => 'Primes Modulo ' . $modulo, },
            yaxis  => { title => 'Next Prime Modulo ' . $modulo, },
        });

        my $name = sprintf '%s/primes-%d-mod-%0*d.png', $path, $max, length($mod), $modulo;
        Chart::Plotly::Image::Orca::orca( plot => $plot, file => $name );
    }
}

__END__
montage $(ls -1 primes-10-mod-*|sort) -geometry '500x500+1+1>' -tile '19x1' montage-10.png
montage $(ls -1 primes-100-mod-*|sort) -geometry '500x500+1+1>' -tile '19x1' montage-100.png
montage $(ls -1 primes-1000-mod-*|sort) -geometry '500x500+1+1>' -tile '19x1' montage-1000.png
montage $(ls -1 primes-10000-mod-*|sort) -geometry '500x500+1+1>' -tile '19x1' montage-10000.png
montage $(ls -1 montage-*.png|sort) -geometry '2000' -tile '1x4' combined.png
