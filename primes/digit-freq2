#!/usr/bin/env perl
use strict;
use warnings;

use List::Util qw( sum0 );
use Math::Prime::XS qw(primes);

my $max = shift || 1000;

my @primes = primes($max);
warn(__PACKAGE__,' ',__LINE__," MARK: ",scalar(@primes),"\n");

# Count the number of times a digit is seen
my %digits;
for my $prime ( @primes ) {
    my @parts = split //, $prime;
    $digits{$_}++ for @parts;
}
#use Data::Dumper;warn(__PACKAGE__,' ',__LINE__," MARK: ",Dumper\%digits);

my $total = sum0 values %digits;
#warn(__PACKAGE__,' ',__LINE__," MARK: ",$total,"\n");

# Compute the proportional frequencies
for my $digit ( keys %digits ) {
    $digits{$digit} /= $total;
}

for my $digit ( sort { $digits{$a} <=> $digits{$b} } keys %digits ) {
    printf "%d: %.4f\n", $digit, $digits{$digit};
}
