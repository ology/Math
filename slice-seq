#!/usr/bin/env perl
use strict;
use warnings;

use Math::Big qw( fibonacci primes );
use Math::BigInt try => 'GMP';

my $max = shift || 20;
my $mod = shift || 6;

my @primes = primes($max);

for my $m ( 2 .. $mod )
{
    # Get the modulus as a bigint
    my $bm = Math::BigInt->new($m);

    for my $x ( 2 .. $max )
    {
        my $file = "$0-$x-$m.dat";
        open( my $dat, '>', $file ) or die "Can't write to '$file': $!";

        my $i = 1;
        for my $n ( @primes )
        {
            my $p = Math::BigInt->new($n);
            $p->bmod($bm);
            my $fib = fibonacci($n);
            my $f = Math::BigInt->new($fib);
            $f->bmod($bm);

#            print $i, " ($x,$m) ", $n, "\t", $fib, "\n";
#            print $i, " ($x,$m) ", $p, "\t", $f, "\n";
            print $dat "$p\t$f\n";

            $i++;
        }

        close $dat;
    }
}
