#!/usr/bin/env perl
use strict;
use warnings;

use Math::Big qw( pi euler );
use Math::Prime::XS qw( primes is_prime );

my $digits = shift // 100;
my $span   = shift // 1;
my $type   = shift // 'pi';

my $number;
if ( $type eq 'e' ) {
    $number = euler( 1, $digits );
}
elsif ( $type eq 'r' ) {
    $number = join '', map { int rand 10 } 1 .. $digits;
}
elsif ( $type eq 'prime' ) {
    my @primes = primes($digits);
    $number = join '', @primes;
}
else {
    $number = pi($digits);
}

( my $decimal = $number ) =~ s/\A\d\.(.*)\z/$1/;
print "Decimal: $decimal\n";

my ( $position, $prime ) = ( 0, 0 );

while ( $position + $span - 1 < length($decimal) ) {
    my $group = substr $decimal, $position, $span;

    my $flag = '';

    if ( is_prime($group) ) {
        $prime++;
        $flag = ' *';
    }

    printf "%3d. %s%s\n", $position + 1, $group, $flag;

    $position++;
}

printf "For %s groups of %d, there are %d primes out of %d total (%.2f%%).\n",
    $type, $span, $prime, $position, $prime / $position;
